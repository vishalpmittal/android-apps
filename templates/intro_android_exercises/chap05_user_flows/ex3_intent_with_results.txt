Goal: Use an intent that passes back a result.

Description:
Sometimes, when launching an activity, it's convenient to give the originating activity some result. An example of this use case is when the launched activity is gathering some information from the user in a form.

Directions:
1) In a new Activity,
  a) Add a TextView and a Button.
  b) In the button click handler, launch another activity using startActivityForResult
  c) Override onActivityResults
    i) Set the text of the TextView to the returned data.
2) In the second Activity,
  a) Create an EditText and a Button
  b) In the button click handler,
    i) Create an intent and add string extra into it.
    ii) Call setResult(RESUILT_OK, intent)
    iii) Call finish() to dismiss the current Activity


## Snippets

// In Activity
final static int GET_RESULT_TEXT = 0;

public void enterText(View v) {
  startActivityForResult(
        new Intent(IntentWithResultActivity.this, SimpleReturnResultActivity.class),
          GET_RESULT_TEXT);
}

// Handle the result once the activity returns a result, display contact
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
  if (requestCode == 0) {
    if (resultCode == RESULT_OK) {
      TextView tvResult = (TextView)findViewById(R.id.txtDisplayResult);
      tvResult.setText(data.getStringExtra("result"));
      Toast.makeText(this, data.getStringExtra("result"), Toast.LENGTH_SHORT).show();
    }
  }
}

// Returning Activity
public void sendResult(View v) {
  String result = ((EditText) findViewById(R.id.txtRandomResultText)).getText().toString();
  Intent i = new Intent();
  i.putExtra("result", result);
  setResult(RESULT_OK, i);
  finish();
}
