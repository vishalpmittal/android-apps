Goal: Add a click handler to a button.

Description:
Click handlers are methods that will be called when a button is called. Click handlers can be registered either in the XML or in Java. Whenever possible, add the click handler in XML. However, in some situations, such as dynamically created buttons, the click handler must be registered in Java using anonymous classes.

Directions:
1) Create a view that has two buttons.
2) For the first button,
  a) Add the android:onClick property as in the snippet below, and set it to "firstButtonClicked"
  b) Add the method "void firstButtonClicked(View view)"
  c) Log the button click.
3) For the second button,
  a) In the onCreate method of the activity, get a handle to the second button using findViewById, and set the OnClickListener.
  b) Log the button click.


## Snippets

// First button with xml onClick
<Button
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_marginTop="20dp"
    android:onClick="firstButtonClicked"
    android:text="XML onClick" />


// Java Activity
protected void onCreate(Bundle savedInstanceState) {
    // ...
  Button secondButton = (Button) findViewById(R.id.btnClick2);
  secondButton.setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
      secondButtonClicked(v);
    }
  });
}

public void firstButtonClicked(View v) {
  // ...
}


public void secondButtonClicked(View v) {
  // ...
}
